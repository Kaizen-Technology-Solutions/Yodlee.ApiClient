/*
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Yodlee.ApiClient.Client;
using Yodlee.ApiClient.Model;

namespace Yodlee.ApiClient.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDataExtractsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Events
        /// </summary>
        /// <remarks>
        /// The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>DataExtractsEventResponse</returns>
        DataExtractsEventResponse GetDataExtractsEvents(string eventName, string fromDate, string toDate, int operationIndex = 0);

        /// <summary>
        /// Get Events
        /// </summary>
        /// <remarks>
        /// The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of DataExtractsEventResponse</returns>
        ApiResponse<DataExtractsEventResponse> GetDataExtractsEventsWithHttpInfo(string eventName, string fromDate, string toDate, int operationIndex = 0);
        /// <summary>
        /// Get userData
        /// </summary>
        /// <remarks>
        /// The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>DataExtractsUserDataResponse</returns>
        DataExtractsUserDataResponse GetDataExtractsUserData(string fromDate, string loginName, string toDate, int operationIndex = 0);

        /// <summary>
        /// Get userData
        /// </summary>
        /// <remarks>
        /// The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of DataExtractsUserDataResponse</returns>
        ApiResponse<DataExtractsUserDataResponse> GetDataExtractsUserDataWithHttpInfo(string fromDate, string loginName, string toDate, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDataExtractsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get Events
        /// </summary>
        /// <remarks>
        /// The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DataExtractsEventResponse</returns>
        System.Threading.Tasks.Task<DataExtractsEventResponse> GetDataExtractsEventsAsync(string eventName, string fromDate, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get Events
        /// </summary>
        /// <remarks>
        /// The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DataExtractsEventResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<DataExtractsEventResponse>> GetDataExtractsEventsWithHttpInfoAsync(string eventName, string fromDate, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get userData
        /// </summary>
        /// <remarks>
        /// The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DataExtractsUserDataResponse</returns>
        System.Threading.Tasks.Task<DataExtractsUserDataResponse> GetDataExtractsUserDataAsync(string fromDate, string loginName, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get userData
        /// </summary>
        /// <remarks>
        /// The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DataExtractsUserDataResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<DataExtractsUserDataResponse>> GetDataExtractsUserDataWithHttpInfoAsync(string fromDate, string loginName, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDataExtractsApi : IDataExtractsApiSync, IDataExtractsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DataExtractsApi : IDataExtractsApi
    {
        private Yodlee.ApiClient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DataExtractsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DataExtractsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DataExtractsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DataExtractsApi(string basePath)
        {
            this.Configuration = Yodlee.ApiClient.Client.Configuration.MergeConfigurations(
                Yodlee.ApiClient.Client.GlobalConfiguration.Instance,
                new Yodlee.ApiClient.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Yodlee.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DataExtractsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DataExtractsApi(Yodlee.ApiClient.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Yodlee.ApiClient.Client.Configuration.MergeConfigurations(
                Yodlee.ApiClient.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Yodlee.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DataExtractsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DataExtractsApi(Yodlee.ApiClient.Client.ISynchronousClient client, Yodlee.ApiClient.Client.IAsynchronousClient asyncClient, Yodlee.ApiClient.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Yodlee.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Yodlee.ApiClient.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Yodlee.ApiClient.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Yodlee.ApiClient.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Yodlee.ApiClient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get Events The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>DataExtractsEventResponse</returns>
        public DataExtractsEventResponse GetDataExtractsEvents(string eventName, string fromDate, string toDate, int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.ApiResponse<DataExtractsEventResponse> localVarResponse = GetDataExtractsEventsWithHttpInfo(eventName, fromDate, toDate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Events The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of DataExtractsEventResponse</returns>
        public Yodlee.ApiClient.Client.ApiResponse<DataExtractsEventResponse> GetDataExtractsEventsWithHttpInfo(string eventName, string fromDate, string toDate, int operationIndex = 0)
        {
            // verify the required parameter 'eventName' is set
            if (eventName == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'eventName' when calling DataExtractsApi->GetDataExtractsEvents");
            }

            // verify the required parameter 'fromDate' is set
            if (fromDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'fromDate' when calling DataExtractsApi->GetDataExtractsEvents");
            }

            // verify the required parameter 'toDate' is set
            if (toDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'toDate' when calling DataExtractsApi->GetDataExtractsEvents");
            }

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "eventName", eventName));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "fromDate", fromDate));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "toDate", toDate));

            localVarRequestOptions.Operation = "DataExtractsApi.GetDataExtractsEvents";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<DataExtractsEventResponse>("/dataExtracts/events", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDataExtractsEvents", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Events The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DataExtractsEventResponse</returns>
        public async System.Threading.Tasks.Task<DataExtractsEventResponse> GetDataExtractsEventsAsync(string eventName, string fromDate, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Yodlee.ApiClient.Client.ApiResponse<DataExtractsEventResponse> localVarResponse = await GetDataExtractsEventsWithHttpInfoAsync(eventName, fromDate, toDate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Events The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.&lt;br&gt;Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page.&lt;br&gt;You can retrieve data in increments of no more than 60 minutes over the period of the last 7 days from today&#39;s date.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eventName">Event Name</param>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DataExtractsEventResponse)</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<DataExtractsEventResponse>> GetDataExtractsEventsWithHttpInfoAsync(string eventName, string fromDate, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'eventName' is set
            if (eventName == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'eventName' when calling DataExtractsApi->GetDataExtractsEvents");
            }

            // verify the required parameter 'fromDate' is set
            if (fromDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'fromDate' when calling DataExtractsApi->GetDataExtractsEvents");
            }

            // verify the required parameter 'toDate' is set
            if (toDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'toDate' when calling DataExtractsApi->GetDataExtractsEvents");
            }


            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "eventName", eventName));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "fromDate", fromDate));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "toDate", toDate));

            localVarRequestOptions.Operation = "DataExtractsApi.GetDataExtractsEvents";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<DataExtractsEventResponse>("/dataExtracts/events", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDataExtractsEvents", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get userData The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>DataExtractsUserDataResponse</returns>
        public DataExtractsUserDataResponse GetDataExtractsUserData(string fromDate, string loginName, string toDate, int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.ApiResponse<DataExtractsUserDataResponse> localVarResponse = GetDataExtractsUserDataWithHttpInfo(fromDate, loginName, toDate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get userData The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of DataExtractsUserDataResponse</returns>
        public Yodlee.ApiClient.Client.ApiResponse<DataExtractsUserDataResponse> GetDataExtractsUserDataWithHttpInfo(string fromDate, string loginName, string toDate, int operationIndex = 0)
        {
            // verify the required parameter 'fromDate' is set
            if (fromDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'fromDate' when calling DataExtractsApi->GetDataExtractsUserData");
            }

            // verify the required parameter 'loginName' is set
            if (loginName == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'loginName' when calling DataExtractsApi->GetDataExtractsUserData");
            }

            // verify the required parameter 'toDate' is set
            if (toDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'toDate' when calling DataExtractsApi->GetDataExtractsUserData");
            }

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "fromDate", fromDate));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "loginName", loginName));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "toDate", toDate));

            localVarRequestOptions.Operation = "DataExtractsApi.GetDataExtractsUserData";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<DataExtractsUserDataResponse>("/dataExtracts/userData", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDataExtractsUserData", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get userData The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DataExtractsUserDataResponse</returns>
        public async System.Threading.Tasks.Task<DataExtractsUserDataResponse> GetDataExtractsUserDataAsync(string fromDate, string loginName, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Yodlee.ApiClient.Client.ApiResponse<DataExtractsUserDataResponse> localVarResponse = await GetDataExtractsUserDataWithHttpInfoAsync(fromDate, loginName, toDate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get userData The get user data service is used to get a user&#39;s modified data for a particular period of time for accounts, transactions, holdings, and provider account information.&lt;br&gt;The time difference between fromDate and toDate fields cannot be more than 60 minutes.&lt;br&gt;By default, pagination is available for the transaction entity in this API. In the first response, the API will retrieve 500 transactions along with other data. The response header will provide a link to retrieve the next set of transactions.&lt;br&gt;In the response body of the first API response, totalTransactionsCount indicates the total number of transactions the API will retrieve for the user.&lt;br&gt;This service is only invoked with either admin access token or a cobrand session.&lt;br/&gt;Refer to &lt;a href&#x3D;\&quot;https://developer.yodlee.com/docs/api/1.1/DataExtracts\&quot;&gt;dataExtracts&lt;/a&gt; page for more information.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fromDate">From DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="loginName">Login Name</param>
        /// <param name="toDate">To DateTime (YYYY-MM-DDThh:mm:ssZ)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DataExtractsUserDataResponse)</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<DataExtractsUserDataResponse>> GetDataExtractsUserDataWithHttpInfoAsync(string fromDate, string loginName, string toDate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'fromDate' is set
            if (fromDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'fromDate' when calling DataExtractsApi->GetDataExtractsUserData");
            }

            // verify the required parameter 'loginName' is set
            if (loginName == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'loginName' when calling DataExtractsApi->GetDataExtractsUserData");
            }

            // verify the required parameter 'toDate' is set
            if (toDate == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'toDate' when calling DataExtractsApi->GetDataExtractsUserData");
            }


            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "fromDate", fromDate));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "loginName", loginName));
            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "toDate", toDate));

            localVarRequestOptions.Operation = "DataExtractsApi.GetDataExtractsUserData";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<DataExtractsUserDataResponse>("/dataExtracts/userData", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDataExtractsUserData", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
