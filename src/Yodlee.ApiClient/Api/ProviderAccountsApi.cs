/*
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Yodlee.ApiClient.Client;
using Yodlee.ApiClient.Model;

namespace Yodlee.ApiClient.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProviderAccountsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Delete Provider Account
        /// </summary>
        /// <remarks>
        /// The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void DeleteProviderAccount(long providerAccountId, int operationIndex = 0);

        /// <summary>
        /// Delete Provider Account
        /// </summary>
        /// <remarks>
        /// The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteProviderAccountWithHttpInfo(long providerAccountId, int operationIndex = 0);
        /// <summary>
        /// Update Account
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdatedProviderAccountResponse</returns>
        UpdatedProviderAccountResponse EditCredentialsOrRefreshProviderAccount(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0);

        /// <summary>
        /// Update Account
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdatedProviderAccountResponse</returns>
        ApiResponse<UpdatedProviderAccountResponse> EditCredentialsOrRefreshProviderAccountWithHttpInfo(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0);
        /// <summary>
        /// Get Provider Accounts
        /// </summary>
        /// <remarks>
        /// The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProviderAccountResponse</returns>
        ProviderAccountResponse GetAllProviderAccounts(string include = default(string), string providerIds = default(string), int operationIndex = 0);

        /// <summary>
        /// Get Provider Accounts
        /// </summary>
        /// <remarks>
        /// The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProviderAccountResponse</returns>
        ApiResponse<ProviderAccountResponse> GetAllProviderAccountsWithHttpInfo(string include = default(string), string providerIds = default(string), int operationIndex = 0);
        /// <summary>
        /// Get Provider Account Details
        /// </summary>
        /// <remarks>
        /// The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProviderAccountDetailResponse</returns>
        ProviderAccountDetailResponse GetProviderAccount(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0);

        /// <summary>
        /// Get Provider Account Details
        /// </summary>
        /// <remarks>
        /// The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProviderAccountDetailResponse</returns>
        ApiResponse<ProviderAccountDetailResponse> GetProviderAccountWithHttpInfo(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0);
        /// <summary>
        /// Get User Profile Details
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProviderAccountUserProfileResponse</returns>
        [Obsolete]
        ProviderAccountUserProfileResponse GetProviderAccountProfiles(string providerAccountId = default(string), int operationIndex = 0);

        /// <summary>
        /// Get User Profile Details
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProviderAccountUserProfileResponse</returns>
        [Obsolete]
        ApiResponse<ProviderAccountUserProfileResponse> GetProviderAccountProfilesWithHttpInfo(string providerAccountId = default(string), int operationIndex = 0);
        /// <summary>
        /// Add Account
        /// </summary>
        /// <remarks>
        /// The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AddedProviderAccountResponse</returns>
        AddedProviderAccountResponse LinkProviderAccount(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0);

        /// <summary>
        /// Add Account
        /// </summary>
        /// <remarks>
        /// The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AddedProviderAccountResponse</returns>
        ApiResponse<AddedProviderAccountResponse> LinkProviderAccountWithHttpInfo(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0);
        /// <summary>
        /// Update Preferences
        /// </summary>
        /// <remarks>
        /// This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void UpdatePreferences(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0);

        /// <summary>
        /// Update Preferences
        /// </summary>
        /// <remarks>
        /// This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> UpdatePreferencesWithHttpInfo(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProviderAccountsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Delete Provider Account
        /// </summary>
        /// <remarks>
        /// The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteProviderAccountAsync(long providerAccountId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Delete Provider Account
        /// </summary>
        /// <remarks>
        /// The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteProviderAccountWithHttpInfoAsync(long providerAccountId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Account
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdatedProviderAccountResponse</returns>
        System.Threading.Tasks.Task<UpdatedProviderAccountResponse> EditCredentialsOrRefreshProviderAccountAsync(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Update Account
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdatedProviderAccountResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<UpdatedProviderAccountResponse>> EditCredentialsOrRefreshProviderAccountWithHttpInfoAsync(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Provider Accounts
        /// </summary>
        /// <remarks>
        /// The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProviderAccountResponse</returns>
        System.Threading.Tasks.Task<ProviderAccountResponse> GetAllProviderAccountsAsync(string include = default(string), string providerIds = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get Provider Accounts
        /// </summary>
        /// <remarks>
        /// The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProviderAccountResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProviderAccountResponse>> GetAllProviderAccountsWithHttpInfoAsync(string include = default(string), string providerIds = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Provider Account Details
        /// </summary>
        /// <remarks>
        /// The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProviderAccountDetailResponse</returns>
        System.Threading.Tasks.Task<ProviderAccountDetailResponse> GetProviderAccountAsync(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get Provider Account Details
        /// </summary>
        /// <remarks>
        /// The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProviderAccountDetailResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProviderAccountDetailResponse>> GetProviderAccountWithHttpInfoAsync(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get User Profile Details
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProviderAccountUserProfileResponse</returns>
        [Obsolete]
        System.Threading.Tasks.Task<ProviderAccountUserProfileResponse> GetProviderAccountProfilesAsync(string providerAccountId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get User Profile Details
        /// </summary>
        /// <remarks>
        /// &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProviderAccountUserProfileResponse)</returns>
        [Obsolete]
        System.Threading.Tasks.Task<ApiResponse<ProviderAccountUserProfileResponse>> GetProviderAccountProfilesWithHttpInfoAsync(string providerAccountId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Account
        /// </summary>
        /// <remarks>
        /// The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AddedProviderAccountResponse</returns>
        System.Threading.Tasks.Task<AddedProviderAccountResponse> LinkProviderAccountAsync(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Add Account
        /// </summary>
        /// <remarks>
        /// The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AddedProviderAccountResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<AddedProviderAccountResponse>> LinkProviderAccountWithHttpInfoAsync(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Preferences
        /// </summary>
        /// <remarks>
        /// This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task UpdatePreferencesAsync(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Update Preferences
        /// </summary>
        /// <remarks>
        /// This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </remarks>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> UpdatePreferencesWithHttpInfoAsync(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProviderAccountsApi : IProviderAccountsApiSync, IProviderAccountsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ProviderAccountsApi : IProviderAccountsApi
    {
        private Yodlee.ApiClient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProviderAccountsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProviderAccountsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProviderAccountsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProviderAccountsApi(string basePath)
        {
            this.Configuration = Yodlee.ApiClient.Client.Configuration.MergeConfigurations(
                Yodlee.ApiClient.Client.GlobalConfiguration.Instance,
                new Yodlee.ApiClient.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Yodlee.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProviderAccountsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProviderAccountsApi(Yodlee.ApiClient.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Yodlee.ApiClient.Client.Configuration.MergeConfigurations(
                Yodlee.ApiClient.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Yodlee.ApiClient.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Yodlee.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProviderAccountsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ProviderAccountsApi(Yodlee.ApiClient.Client.ISynchronousClient client, Yodlee.ApiClient.Client.IAsynchronousClient asyncClient, Yodlee.ApiClient.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Yodlee.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Yodlee.ApiClient.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Yodlee.ApiClient.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Yodlee.ApiClient.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Yodlee.ApiClient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Delete Provider Account The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void DeleteProviderAccount(long providerAccountId, int operationIndex = 0)
        {
            DeleteProviderAccountWithHttpInfo(providerAccountId);
        }

        /// <summary>
        /// Delete Provider Account The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Yodlee.ApiClient.Client.ApiResponse<Object> DeleteProviderAccountWithHttpInfo(long providerAccountId, int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("providerAccountId", Yodlee.ApiClient.Client.ClientUtils.ParameterToString(providerAccountId)); // path parameter

            localVarRequestOptions.Operation = "ProviderAccountsApi.DeleteProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/providerAccounts/{providerAccountId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete Provider Account The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteProviderAccountAsync(long providerAccountId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await DeleteProviderAccountWithHttpInfoAsync(providerAccountId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Delete Provider Account The delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. &lt;br&gt;This service does not return a response. The HTTP response code is 204 (Success with no content).&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<Object>> DeleteProviderAccountWithHttpInfoAsync(long providerAccountId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("providerAccountId", Yodlee.ApiClient.Client.ClientUtils.ParameterToString(providerAccountId)); // path parameter

            localVarRequestOptions.Operation = "ProviderAccountsApi.DeleteProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/providerAccounts/{providerAccountId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Account &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdatedProviderAccountResponse</returns>
        public UpdatedProviderAccountResponse EditCredentialsOrRefreshProviderAccount(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.ApiResponse<UpdatedProviderAccountResponse> localVarResponse = EditCredentialsOrRefreshProviderAccountWithHttpInfo(providerAccountIds, providerAccountRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Account &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdatedProviderAccountResponse</returns>
        public Yodlee.ApiClient.Client.ApiResponse<UpdatedProviderAccountResponse> EditCredentialsOrRefreshProviderAccountWithHttpInfo(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0)
        {
            // verify the required parameter 'providerAccountIds' is set
            if (providerAccountIds == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'providerAccountIds' when calling ProviderAccountsApi->EditCredentialsOrRefreshProviderAccount");
            }

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerAccountIds", providerAccountIds));
            localVarRequestOptions.Data = providerAccountRequest;

            localVarRequestOptions.Operation = "ProviderAccountsApi.EditCredentialsOrRefreshProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<UpdatedProviderAccountResponse>("/providerAccounts", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EditCredentialsOrRefreshProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Account &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdatedProviderAccountResponse</returns>
        public async System.Threading.Tasks.Task<UpdatedProviderAccountResponse> EditCredentialsOrRefreshProviderAccountAsync(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Yodlee.ApiClient.Client.ApiResponse<UpdatedProviderAccountResponse> localVarResponse = await EditCredentialsOrRefreshProviderAccountWithHttpInfoAsync(providerAccountIds, providerAccountRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Account &lt;b&gt;Credential-based Implementation Notes:&lt;/b&gt; &lt;br&gt;The update account API is used to:  &amp;bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. &lt;br&gt; &amp;bull; Update account credentials when the user has changed the authentication information at the provider site. &lt;br&gt; &amp;bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. &lt;br&gt; &amp;bull; Retrieve the latest information of all the eligible accounts that belong to the user. &lt;br&gt;&lt;br&gt;&lt;b&gt;Edit Credentials - Notes: &lt;/b&gt; &lt;br&gt; &amp;bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; LoginForm &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#9702; Field array &lt;br&gt; &amp;bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include&#x3D;credentials API response. &lt;br&gt; &amp;bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. &lt;br&gt;&lt;b&gt;Posting MFA Info - Notes: &lt;/b&gt; &lt;br&gt;1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. &lt;br&gt;2. After receiving the inputs from your user: &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.Pass one of the following objects as input to this API:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; LoginForm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;bull; Field array&lt;br/&gt;&lt;br&gt;&lt;b&gt;Points to consider:&lt;/b&gt;&lt;br&gt;&amp;bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for &lt;br&gt;the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. &lt;br&gt;&amp;bull; Encrypt the credentials and MFA information using the public key.&lt;br&gt;&amp;bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Open Banking (OB)-based Authentication - Notes:&lt;/b&gt;&lt;br&gt;The update account API is used to:&lt;br&gt;&amp;bull; Retrieve the latest information for accounts from the provider site.&lt;br&gt;&amp;bull; Update the renewed consent for an existing provider account.&lt;br&gt;&amp;bull; Retrieve the latest information for all the eligible accounts that belong to the user.&lt;br/&gt;&lt;br&gt;Yodlee recommendations: &lt;br/&gt;&amp;bull; Create the field entity with the authParameters provided in the get provider details API.&lt;br&gt;&amp;bull; Populate the field entity with the values received from the OB site and pass it to this API.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Update All Eligible Accounts - Notes: &lt;/b&gt;&lt;br&gt;&amp;bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).&lt;br&gt;&amp;bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.&lt;br&gt;&amp;bull; No parameters should be passed to this API to trigger this action.&lt;br&gt;&amp;bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. &lt;br&gt;&amp;bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.&lt;br/&gt;&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;What follows are common to both OB and credential-based authentication implementations:  &lt;/b&gt;&lt;br&gt;&amp;bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. &lt;br&gt;&amp;bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.&lt;br&gt;&amp;bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.&lt;br&gt;&amp;bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.&lt;br&gt;&amp;bull; Updating preferences using this API will trigger refreshes.&lt;br&gt;&amp;bull; Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. &lt;br&gt;&amp;bull; The content type has to be passed as application/json for the body parameter.&lt;br&gt;&lt;b&gt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -&lt;/b&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountIds">comma separated providerAccountIds</param>
        /// <param name="providerAccountRequest">loginForm or field entity (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdatedProviderAccountResponse)</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<UpdatedProviderAccountResponse>> EditCredentialsOrRefreshProviderAccountWithHttpInfoAsync(string providerAccountIds, ProviderAccountRequest providerAccountRequest = default(ProviderAccountRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'providerAccountIds' is set
            if (providerAccountIds == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'providerAccountIds' when calling ProviderAccountsApi->EditCredentialsOrRefreshProviderAccount");
            }


            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerAccountIds", providerAccountIds));
            localVarRequestOptions.Data = providerAccountRequest;

            localVarRequestOptions.Operation = "ProviderAccountsApi.EditCredentialsOrRefreshProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<UpdatedProviderAccountResponse>("/providerAccounts", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EditCredentialsOrRefreshProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Provider Accounts The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProviderAccountResponse</returns>
        public ProviderAccountResponse GetAllProviderAccounts(string include = default(string), string providerIds = default(string), int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.ApiResponse<ProviderAccountResponse> localVarResponse = GetAllProviderAccountsWithHttpInfo(include, providerIds);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Provider Accounts The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProviderAccountResponse</returns>
        public Yodlee.ApiClient.Client.ApiResponse<ProviderAccountResponse> GetAllProviderAccountsWithHttpInfo(string include = default(string), string providerIds = default(string), int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (include != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "include", include));
            }
            if (providerIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerIds", providerIds));
            }

            localVarRequestOptions.Operation = "ProviderAccountsApi.GetAllProviderAccounts";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<ProviderAccountResponse>("/providerAccounts", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetAllProviderAccounts", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Provider Accounts The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProviderAccountResponse</returns>
        public async System.Threading.Tasks.Task<ProviderAccountResponse> GetAllProviderAccountsAsync(string include = default(string), string providerIds = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Yodlee.ApiClient.Client.ApiResponse<ProviderAccountResponse> localVarResponse = await GetAllProviderAccountsWithHttpInfoAsync(include, providerIds, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Provider Accounts The get provider accounts service is used to return all the provider accounts added by the user. &lt;br&gt;This includes the failed and successfully added provider accounts.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="include">include (optional)</param>
        /// <param name="providerIds">Comma separated providerIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProviderAccountResponse)</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<ProviderAccountResponse>> GetAllProviderAccountsWithHttpInfoAsync(string include = default(string), string providerIds = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (include != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "include", include));
            }
            if (providerIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerIds", providerIds));
            }

            localVarRequestOptions.Operation = "ProviderAccountsApi.GetAllProviderAccounts";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ProviderAccountResponse>("/providerAccounts", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetAllProviderAccounts", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Provider Account Details The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProviderAccountDetailResponse</returns>
        public ProviderAccountDetailResponse GetProviderAccount(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.ApiResponse<ProviderAccountDetailResponse> localVarResponse = GetProviderAccountWithHttpInfo(providerAccountId, include, requestId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Provider Account Details The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProviderAccountDetailResponse</returns>
        public Yodlee.ApiClient.Client.ApiResponse<ProviderAccountDetailResponse> GetProviderAccountWithHttpInfo(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("providerAccountId", Yodlee.ApiClient.Client.ClientUtils.ParameterToString(providerAccountId)); // path parameter
            if (include != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "include", include));
            }
            if (requestId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "requestId", requestId));
            }

            localVarRequestOptions.Operation = "ProviderAccountsApi.GetProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<ProviderAccountDetailResponse>("/providerAccounts/{providerAccountId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Provider Account Details The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProviderAccountDetailResponse</returns>
        public async System.Threading.Tasks.Task<ProviderAccountDetailResponse> GetProviderAccountAsync(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Yodlee.ApiClient.Client.ApiResponse<ProviderAccountDetailResponse> localVarResponse = await GetProviderAccountWithHttpInfoAsync(providerAccountId, include, requestId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Provider Account Details The get provider account details service is used to learn the status of adding accounts and updating accounts.&lt;br&gt;This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.&lt;br&gt;When &lt;i&gt;include &#x3D; credentials&lt;/i&gt;, questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The password and answer fields are not returned in the response.&lt;/li&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="include">include credentials,questions (optional)</param>
        /// <param name="requestId">The unique identifier for the request that returns contextual data (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProviderAccountDetailResponse)</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<ProviderAccountDetailResponse>> GetProviderAccountWithHttpInfoAsync(long providerAccountId, string include = default(string), string requestId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("providerAccountId", Yodlee.ApiClient.Client.ClientUtils.ParameterToString(providerAccountId)); // path parameter
            if (include != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "include", include));
            }
            if (requestId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "requestId", requestId));
            }

            localVarRequestOptions.Operation = "ProviderAccountsApi.GetProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ProviderAccountDetailResponse>("/providerAccounts/{providerAccountId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get User Profile Details &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProviderAccountUserProfileResponse</returns>
        [Obsolete]
        public ProviderAccountUserProfileResponse GetProviderAccountProfiles(string providerAccountId = default(string), int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.ApiResponse<ProviderAccountUserProfileResponse> localVarResponse = GetProviderAccountProfilesWithHttpInfo(providerAccountId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get User Profile Details &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProviderAccountUserProfileResponse</returns>
        [Obsolete]
        public Yodlee.ApiClient.Client.ApiResponse<ProviderAccountUserProfileResponse> GetProviderAccountProfilesWithHttpInfo(string providerAccountId = default(string), int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (providerAccountId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerAccountId", providerAccountId));
            }

            localVarRequestOptions.Operation = "ProviderAccountsApi.GetProviderAccountProfiles";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<ProviderAccountUserProfileResponse>("/providerAccounts/profile", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProviderAccountProfiles", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get User Profile Details &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProviderAccountUserProfileResponse</returns>
        [Obsolete]
        public async System.Threading.Tasks.Task<ProviderAccountUserProfileResponse> GetProviderAccountProfilesAsync(string providerAccountId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Yodlee.ApiClient.Client.ApiResponse<ProviderAccountUserProfileResponse> localVarResponse = await GetProviderAccountProfilesWithHttpInfoAsync(providerAccountId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get User Profile Details &lt;b&gt;Refer GET /verification/holderProfile&lt;/b&gt;&lt;br&gt;The get provider accounts profile service is used to return the user profile details that are associated to the provider account. &lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">Comma separated providerAccountIds. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProviderAccountUserProfileResponse)</returns>
        [Obsolete]
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<ProviderAccountUserProfileResponse>> GetProviderAccountProfilesWithHttpInfoAsync(string providerAccountId = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (providerAccountId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerAccountId", providerAccountId));
            }

            localVarRequestOptions.Operation = "ProviderAccountsApi.GetProviderAccountProfiles";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ProviderAccountUserProfileResponse>("/providerAccounts/profile", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProviderAccountProfiles", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add Account The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AddedProviderAccountResponse</returns>
        public AddedProviderAccountResponse LinkProviderAccount(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0)
        {
            Yodlee.ApiClient.Client.ApiResponse<AddedProviderAccountResponse> localVarResponse = LinkProviderAccountWithHttpInfo(providerId, providerAccountRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add Account The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AddedProviderAccountResponse</returns>
        public Yodlee.ApiClient.Client.ApiResponse<AddedProviderAccountResponse> LinkProviderAccountWithHttpInfo(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0)
        {
            // verify the required parameter 'providerAccountRequest' is set
            if (providerAccountRequest == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'providerAccountRequest' when calling ProviderAccountsApi->LinkProviderAccount");
            }

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerId", providerId));
            localVarRequestOptions.Data = providerAccountRequest;

            localVarRequestOptions.Operation = "ProviderAccountsApi.LinkProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<AddedProviderAccountResponse>("/providerAccounts", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LinkProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add Account The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AddedProviderAccountResponse</returns>
        public async System.Threading.Tasks.Task<AddedProviderAccountResponse> LinkProviderAccountAsync(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Yodlee.ApiClient.Client.ApiResponse<AddedProviderAccountResponse> localVarResponse = await LinkProviderAccountWithHttpInfoAsync(providerId, providerAccountRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add Account The add account service is used to link the user&#39;s account with the provider site in the Yodlee system. Providers that require multifactor authentication or open banking are also supported by this service. The response includes the Yodlee generated ID (providerAccountId) of the account along with the refresh information.&lt;br&gt;&lt;br&gt;Open Banking Implementation Notes: &lt;br&gt;To link the user&#39;s account of the Open Banking provider site in the Yodlee system, pass the field entity that contains:&lt;br&gt;1. id - From the authParameters provided in the get provider details service&lt;br&gt;2. value - From the redirect URL of the Open Banking site&lt;br&gt;&lt;br&gt;Credential-based Implementation Notes: &lt;br&gt;1. The loginForm or the field array are the objects under the provider object, obtained from the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\&quot;&gt;get provider details&lt;/a&gt; service response.&lt;br&gt;2. The credentials provided by the user should be embedded in the loginForm or field array object.&lt;br&gt;3. While testing the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\&quot;&gt;PKI feature&lt;/a&gt;, encrypt the credentials using the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/utility/encrypt.html\&quot;&gt;encryption utility&lt;/a&gt;.&lt;br&gt;4. The data to be retrieved from the provider site can be passed using datasetName or dataset. If datasetName is passed, all the attributes that are implicitly configured for the dataset will be retrieved.&lt;br&gt;5. If the customer has not subscribed to the REFRESH event webhooks notification for accounts that require multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question &amp; answer, and captcha) is returned in the response.&lt;br&gt;6. The &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\&quot;&gt;update account&lt;/a&gt; service should be called to post the MFA information to continue adding the account.&lt;br&gt;&lt;br&gt;Generic Implementation Notes:&lt;br&gt;1. Refer to the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\&quot;&gt;add account&lt;/a&gt; flow chart for implementation.&lt;br&gt;2. The get provider account details has &lt;a href&#x3D;\&quot;https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\&quot;&gt;webhooks support&lt;/a&gt;. If the customer has subscribed to the REFRESH event notification and has invoked this service to add an account, relevant notifications will be sent to the callback URL.&lt;br&gt;3. If you had not subscribed for notifications, the &lt;a href&#x3D;\&quot;https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\&quot;&gt;get provider account &lt;/a&gt; details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. &lt;br&gt;4. A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.&lt;br&gt;   It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.&lt;br&gt;5. Pass linkedProviderAccountId in the input to link a user&#39;s credential-based providerAccount with the open banking providerAccount. Ensure that the credential-based providerAccount belongs to the same institution. &lt;br&gt;6. The content type has to be passed as application/json in the body parameter. &lt;br&gt;7. Only for the REDSYS/PSD2 UK OB integration, passing the state parameter is mandatory during the add or update account process. The state parameter key can be found in the authParameter attribute of the get provider or get provider details API response. The value for the state parameter is present in the Authorization URL. Append the callback URL to the state parameter while adding or updating an account.
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <param name="providerAccountRequest">loginForm or field entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AddedProviderAccountResponse)</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<AddedProviderAccountResponse>> LinkProviderAccountWithHttpInfoAsync(long providerId, ProviderAccountRequest providerAccountRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'providerAccountRequest' is set
            if (providerAccountRequest == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'providerAccountRequest' when calling ProviderAccountsApi->LinkProviderAccount");
            }


            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Yodlee.ApiClient.Client.ClientUtils.ParameterToMultiMap("", "providerId", providerId));
            localVarRequestOptions.Data = providerAccountRequest;

            localVarRequestOptions.Operation = "ProviderAccountsApi.LinkProviderAccount";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<AddedProviderAccountResponse>("/providerAccounts", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LinkProviderAccount", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Preferences This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void UpdatePreferences(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0)
        {
            UpdatePreferencesWithHttpInfo(providerAccountId, preferences);
        }

        /// <summary>
        /// Update Preferences This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Yodlee.ApiClient.Client.ApiResponse<Object> UpdatePreferencesWithHttpInfo(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0)
        {
            // verify the required parameter 'preferences' is set
            if (preferences == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'preferences' when calling ProviderAccountsApi->UpdatePreferences");
            }

            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("providerAccountId", Yodlee.ApiClient.Client.ClientUtils.ParameterToString(providerAccountId)); // path parameter
            localVarRequestOptions.Data = preferences;

            localVarRequestOptions.Operation = "ProviderAccountsApi.UpdatePreferences";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<Object>("/providerAccounts/{providerAccountId}/preferences", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdatePreferences", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Preferences This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task UpdatePreferencesAsync(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await UpdatePreferencesWithHttpInfoAsync(providerAccountId, preferences, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Update Preferences This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.&lt;br&gt;Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.&lt;br&gt;Modified data will not be provided in the dataExtracts/userData endpoint.&lt;br&gt;Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.&lt;br&gt;
        /// </summary>
        /// <exception cref="Yodlee.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerAccountId">providerAccountId</param>
        /// <param name="preferences">preferences</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Yodlee.ApiClient.Client.ApiResponse<Object>> UpdatePreferencesWithHttpInfoAsync(long providerAccountId, ProviderAccountPreferencesRequest preferences, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'preferences' is set
            if (preferences == null)
            {
                throw new Yodlee.ApiClient.Client.ApiException(400, "Missing required parameter 'preferences' when calling ProviderAccountsApi->UpdatePreferences");
            }


            Yodlee.ApiClient.Client.RequestOptions localVarRequestOptions = new Yodlee.ApiClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json;charset=UTF-8"
            };

            var localVarContentType = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Yodlee.ApiClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("providerAccountId", Yodlee.ApiClient.Client.ClientUtils.ParameterToString(providerAccountId)); // path parameter
            localVarRequestOptions.Data = preferences;

            localVarRequestOptions.Operation = "ProviderAccountsApi.UpdatePreferences";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<Object>("/providerAccounts/{providerAccountId}/preferences", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdatePreferences", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
