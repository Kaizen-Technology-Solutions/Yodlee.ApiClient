/*
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yodlee.ApiClient.Client;
using Yodlee.ApiClient.Api;
// uncomment below to import models
//using Yodlee.ApiClient.Model;

namespace Yodlee.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing AuthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthApiTests : IDisposable
    {
        private AuthApi instance;

        public AuthApiTests()
        {
            instance = new AuthApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthApi
            //Assert.IsType<AuthApi>(instance);
        }

        /// <summary>
        /// Test DeleteApiKey
        /// </summary>
        [Fact]
        public void DeleteApiKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.DeleteApiKey(key);
        }

        /// <summary>
        /// Test DeleteToken
        /// </summary>
        [Fact]
        public void DeleteTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteToken();
        }

        /// <summary>
        /// Test GenerateAccessToken
        /// </summary>
        [Fact]
        public void GenerateAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string secret = null;
            //var response = instance.GenerateAccessToken(clientId, secret);
            //Assert.IsType<ClientCredentialTokenResponse>(response);
        }

        /// <summary>
        /// Test GenerateApiKey
        /// </summary>
        [Fact]
        public void GenerateApiKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiKeyRequest apiKeyRequest = null;
            //var response = instance.GenerateApiKey(apiKeyRequest);
            //Assert.IsType<ApiKeyResponse>(response);
        }

        /// <summary>
        /// Test GetApiKeys
        /// </summary>
        [Fact]
        public void GetApiKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetApiKeys();
            //Assert.IsType<ApiKeyResponse>(response);
        }
    }
}
