/*
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yodlee.ApiClient.Client;
using Yodlee.ApiClient.Api;
// uncomment below to import models
//using Yodlee.ApiClient.Model;

namespace Yodlee.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing ProviderAccountsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProviderAccountsApiTests : IDisposable
    {
        private ProviderAccountsApi instance;

        public ProviderAccountsApiTests()
        {
            instance = new ProviderAccountsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProviderAccountsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProviderAccountsApi
            //Assert.IsType<ProviderAccountsApi>(instance);
        }

        /// <summary>
        /// Test DeleteProviderAccount
        /// </summary>
        [Fact]
        public void DeleteProviderAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long providerAccountId = null;
            //instance.DeleteProviderAccount(providerAccountId);
        }

        /// <summary>
        /// Test EditCredentialsOrRefreshProviderAccount
        /// </summary>
        [Fact]
        public void EditCredentialsOrRefreshProviderAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string providerAccountIds = null;
            //ProviderAccountRequest providerAccountRequest = null;
            //var response = instance.EditCredentialsOrRefreshProviderAccount(providerAccountIds, providerAccountRequest);
            //Assert.IsType<UpdatedProviderAccountResponse>(response);
        }

        /// <summary>
        /// Test GetAllProviderAccounts
        /// </summary>
        [Fact]
        public void GetAllProviderAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string include = null;
            //string providerIds = null;
            //var response = instance.GetAllProviderAccounts(include, providerIds);
            //Assert.IsType<ProviderAccountResponse>(response);
        }

        /// <summary>
        /// Test GetProviderAccount
        /// </summary>
        [Fact]
        public void GetProviderAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long providerAccountId = null;
            //string include = null;
            //string requestId = null;
            //var response = instance.GetProviderAccount(providerAccountId, include, requestId);
            //Assert.IsType<ProviderAccountDetailResponse>(response);
        }

        /// <summary>
        /// Test GetProviderAccountProfiles
        /// </summary>
        [Fact]
        public void GetProviderAccountProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string providerAccountId = null;
            //var response = instance.GetProviderAccountProfiles(providerAccountId);
            //Assert.IsType<ProviderAccountUserProfileResponse>(response);
        }

        /// <summary>
        /// Test LinkProviderAccount
        /// </summary>
        [Fact]
        public void LinkProviderAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long providerId = null;
            //ProviderAccountRequest providerAccountRequest = null;
            //var response = instance.LinkProviderAccount(providerId, providerAccountRequest);
            //Assert.IsType<AddedProviderAccountResponse>(response);
        }

        /// <summary>
        /// Test UpdatePreferences
        /// </summary>
        [Fact]
        public void UpdatePreferencesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long providerAccountId = null;
            //ProviderAccountPreferencesRequest preferences = null;
            //instance.UpdatePreferences(providerAccountId, preferences);
        }
    }
}
