/*
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Yodlee.ApiClient.Api;
using Yodlee.ApiClient.Model;
using Yodlee.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Yodlee.ApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing Statement
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class StatementTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Statement
        //private Statement instance;

        public StatementTests()
        {
            // TODO uncomment below to create an instance of Statement
            //instance = new Statement();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Statement
        /// </summary>
        [Fact]
        public void StatementInstanceTest()
        {
            // TODO uncomment below to test "IsType" Statement
            //Assert.IsType<Statement>(instance);
        }


        /// <summary>
        /// Test the property 'Apr'
        /// </summary>
        [Fact]
        public void AprTest()
        {
            // TODO unit test for the property 'Apr'
        }
        /// <summary>
        /// Test the property 'CashApr'
        /// </summary>
        [Fact]
        public void CashAprTest()
        {
            // TODO unit test for the property 'CashApr'
        }
        /// <summary>
        /// Test the property 'BillingPeriodStart'
        /// </summary>
        [Fact]
        public void BillingPeriodStartTest()
        {
            // TODO unit test for the property 'BillingPeriodStart'
        }
        /// <summary>
        /// Test the property 'DueDate'
        /// </summary>
        [Fact]
        public void DueDateTest()
        {
            // TODO unit test for the property 'DueDate'
        }
        /// <summary>
        /// Test the property 'InterestAmount'
        /// </summary>
        [Fact]
        public void InterestAmountTest()
        {
            // TODO unit test for the property 'InterestAmount'
        }
        /// <summary>
        /// Test the property 'StatementDate'
        /// </summary>
        [Fact]
        public void StatementDateTest()
        {
            // TODO unit test for the property 'StatementDate'
        }
        /// <summary>
        /// Test the property 'CashAdvance'
        /// </summary>
        [Fact]
        public void CashAdvanceTest()
        {
            // TODO unit test for the property 'CashAdvance'
        }
        /// <summary>
        /// Test the property 'BillingPeriodEnd'
        /// </summary>
        [Fact]
        public void BillingPeriodEndTest()
        {
            // TODO unit test for the property 'BillingPeriodEnd'
        }
        /// <summary>
        /// Test the property 'PrincipalAmount'
        /// </summary>
        [Fact]
        public void PrincipalAmountTest()
        {
            // TODO unit test for the property 'PrincipalAmount'
        }
        /// <summary>
        /// Test the property 'LoanBalance'
        /// </summary>
        [Fact]
        public void LoanBalanceTest()
        {
            // TODO unit test for the property 'LoanBalance'
        }
        /// <summary>
        /// Test the property 'AmountDue'
        /// </summary>
        [Fact]
        public void AmountDueTest()
        {
            // TODO unit test for the property 'AmountDue'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'LastUpdated'
        /// </summary>
        [Fact]
        public void LastUpdatedTest()
        {
            // TODO unit test for the property 'LastUpdated'
        }
        /// <summary>
        /// Test the property 'IsLatest'
        /// </summary>
        [Fact]
        public void IsLatestTest()
        {
            // TODO unit test for the property 'IsLatest'
        }
        /// <summary>
        /// Test the property 'MinimumPayment'
        /// </summary>
        [Fact]
        public void MinimumPaymentTest()
        {
            // TODO unit test for the property 'MinimumPayment'
        }
        /// <summary>
        /// Test the property 'LastPaymentDate'
        /// </summary>
        [Fact]
        public void LastPaymentDateTest()
        {
            // TODO unit test for the property 'LastPaymentDate'
        }
        /// <summary>
        /// Test the property 'LastPaymentAmount'
        /// </summary>
        [Fact]
        public void LastPaymentAmountTest()
        {
            // TODO unit test for the property 'LastPaymentAmount'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'NewCharges'
        /// </summary>
        [Fact]
        public void NewChargesTest()
        {
            // TODO unit test for the property 'NewCharges'
        }

    }

}
