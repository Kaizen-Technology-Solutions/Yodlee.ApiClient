/*
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Yodlee.ApiClient.Api;
using Yodlee.ApiClient.Model;
using Yodlee.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Yodlee.ApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing Field
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FieldTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Field
        //private Field instance;

        public FieldTests()
        {
            // TODO uncomment below to create an instance of Field
            //instance = new Field();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Field
        /// </summary>
        [Fact]
        public void FieldInstanceTest()
        {
            // TODO uncomment below to test "IsType" Field
            //Assert.IsType<Field>(instance);
        }


        /// <summary>
        /// Test the property 'Image'
        /// </summary>
        [Fact]
        public void ImageTest()
        {
            // TODO unit test for the property 'Image'
        }
        /// <summary>
        /// Test the property 'Prefix'
        /// </summary>
        [Fact]
        public void PrefixTest()
        {
            // TODO unit test for the property 'Prefix'
        }
        /// <summary>
        /// Test the property 'MinLength'
        /// </summary>
        [Fact]
        public void MinLengthTest()
        {
            // TODO unit test for the property 'MinLength'
        }
        /// <summary>
        /// Test the property 'ValueEditable'
        /// </summary>
        [Fact]
        public void ValueEditableTest()
        {
            // TODO unit test for the property 'ValueEditable'
        }
        /// <summary>
        /// Test the property 'IsOptional'
        /// </summary>
        [Fact]
        public void IsOptionalTest()
        {
            // TODO unit test for the property 'IsOptional'
        }
        /// <summary>
        /// Test the property 'Suffix'
        /// </summary>
        [Fact]
        public void SuffixTest()
        {
            // TODO unit test for the property 'Suffix'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'IsValueProvided'
        /// </summary>
        [Fact]
        public void IsValueProvidedTest()
        {
            // TODO unit test for the property 'IsValueProvided'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }
        /// <summary>
        /// Test the property 'MaxLength'
        /// </summary>
        [Fact]
        public void MaxLengthTest()
        {
            // TODO unit test for the property 'MaxLength'
        }
        /// <summary>
        /// Test the property 'Option'
        /// </summary>
        [Fact]
        public void OptionTest()
        {
            // TODO unit test for the property 'Option'
        }

    }

}
